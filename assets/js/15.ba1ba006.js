(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{171:function(e,t,r){"use strict";r.r(t);var s=r(0),a=Object(s.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._m(1),r("p",[r("router-link",{attrs:{to:"/tutorial/getting-started.html#usage"}},[e._v("View this")]),e._v(". This chapter includes brief introduction of ServerHub instance Run() method.")],1),e._m(2),e._m(3),e._m(4),r("p",[e._v("Not like what we've seen in "),r("router-link",{attrs:{to:"/tutorial/getting-started.html#usage"}},[e._v("Usage")]),e._v(" chapter, the configuraton object is much too complicated. And in fact, there is only one property that is required: "),r("code",[e._v("BaseDir")]),e._v(".")],1),e._m(5),r("p",[e._v("This is the simplest configuration that can make ServerHub work functional normally.")]),e._m(6),r("p",[e._v("To customize ServerHub, you need some extra configurations.")]),e._m(7),e._m(8),e._m(9),r("p",[e._v('We all know that ServerHub routes request to controllers. If we want them to be registered, we have to provide the contain directory name to ServerHub. The path of controller directory should be relative to server root path. If you don\'t specify one, the default value will be "controller/".')]),e._m(10),e._m(11),e._m(12),e._m(13),e._m(14),r("p",[e._v('Specify your database provider. In current version, ServerHub only supports MySQL, which means the only valid value would be "mysql".')]),e._m(15),e._m(16),e._m(17),r("p",[e._v("This specifies how much memory can ServerHub caching system allocate. If file sizes exceeded this limit, then ServerHub will call WCS to unload some unnecessary caches. This will be covered in later chapters.")]),e._m(18),e._m(19),e._m(20),r("p",[e._v("When the request does not match any resources or route rules, ServerHub will render an error page to the response. From v0.0.93, you can add your custom error page to ServerHub server directory and specify with this property.")]),r("p",[e._v("More property definitions are coming soon.")]),e._m(21),e._m(22),e._m(23),e._m(24),r("p",[e._v("Here is a "),r("router-link",{attrs:{to:"/tutorial/tls-tutorial.html"}},[e._v("tutorial")]),e._v(" help you with TLS in ServerHub MVC.")],1),e._m(25),e._m(26),r("p",[e._v("On client side, you just use:")]),e._m(27),r("p",[e._v("There are 2 properties:")]),r("ul",[e._m(28),r("li",[r("code",[e._v("ConnectionCallback")]),e._v(" is a callback function. It receives a "),r("a",{attrs:{href:"https://github.com/websockets/ws",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebSocket"),r("OutboundLink")],1),e._v(" object as its parameter.")])]),e._m(29),e._m(30),r("p",[e._v("This method returns an object with two properties.")]),e._m(31),e._m(32)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"run-module-method"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#run-module-method","aria-hidden":"true"}},[this._v("#")]),this._v(" Run() Module Method")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"serverhub-run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#serverhub-run","aria-hidden":"true"}},[this._v("#")]),this._v(" ServerHub.Run()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"instance-run-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#instance-run-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Instance.Run() Configuration")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The other day, I introduced "),t("code",[this._v("instance.Run()")]),this._v(" method to you. And in this chapter, we will talk about the first parameter of "),t("code",[this._v("instance.Run()")]),this._v(" method - the configuration object.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"as-simple-as-possible"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#as-simple-as-possible","aria-hidden":"true"}},[this._v("#")]),this._v(" As simple as possible")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("BaseDir")]),this._v(" is the root path of server, which will be used during the whole life circle of your ServerHub application. If your current entry file, such as "),t("code",[this._v("app.js")]),this._v(", is just located in the directory that you want to use as server root. Then the value should be "),t("code",[this._v("__dirname")]),this._v(", which is a global variable of Node.js.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"other-properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#other-properties","aria-hidden":"true"}},[this._v("#")]),this._v(" Other properties")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"webdir"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webdir","aria-hidden":"true"}},[this._v("#")]),this._v(" WebDir")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("WebDir")]),this._v(' is website directory. Your page files, contents, scripts and assets should be put in this directory. ServerHub uses "www/" as its default value. If you want to set up a new website root directory, create a folder and pass its name to '),t("code",[this._v("WebDir")]),this._v(" property.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"controllerdir"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#controllerdir","aria-hidden":"true"}},[this._v("#")]),this._v(" ControllerDir")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"controllers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#controllers","aria-hidden":"true"}},[this._v("#")]),this._v(" Controllers")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Sometimes, we don't want to register every controller in the contain folder. Then we can pass an array of required controller file name to this parameter. eg: "),t("code",[this._v("['home.js', 'data.js']")]),this._v(". But if you want all controller files to be registered, just ignore "),t("code",[this._v("Controllers")]),this._v(" property and ServerHub will automatically scan and register every file under "),t("code",[this._v("ControllerDir")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"viewdir-and-modeldir"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#viewdir-and-modeldir","aria-hidden":"true"}},[this._v("#")]),this._v(" ViewDir and ModelDir")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Pretty similar to "),t("code",[this._v("ControllerDir")]),this._v(" in previous section. They are used to hold view files and models.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"dbprovider"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dbprovider","aria-hidden":"true"}},[this._v("#")]),this._v(" DBProvider")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"dbconnectionstring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dbconnectionstring","aria-hidden":"true"}},[this._v("#")]),this._v(" DBConnectionString")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If you have only one database instance to connect, the suggested way is to pass a global database connection string to ServerHub. Because if you don't, you will have to provide a value every time you call "),t("code",[this._v("GetConnection()")]),this._v(" method on your database provider.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"maxcachesize"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maxcachesize","aria-hidden":"true"}},[this._v("#")]),this._v(" MaxCacheSize")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"defaultpages"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#defaultpages","aria-hidden":"true"}},[this._v("#")]),this._v(" DefaultPages")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("ServerHub uses a fallback strategy for default pages. And your default page file must be put under the root of "),t("code",[this._v("WebDir")]),this._v(' directory. In default, ServerHub uses "index.html" first, then "default.html" and finally "page.html". You can override this configuration by passing an array like '),t("code",[this._v("['hello.html', 'first.html']")]),this._v(" to this property.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"pagenotfound-v0-0-93"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pagenotfound-v0-0-93","aria-hidden":"true"}},[this._v("#")]),this._v(" PageNotFound "),t("code",[this._v("v0.0.93+")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"asyncoperationtimeout-v0-0-97"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#asyncoperationtimeout-v0-0-97","aria-hidden":"true"}},[this._v("#")]),this._v(" AsyncOperationTimeout "),t("code",[this._v("v0.0.97+")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("In "),r("code",[e._v("v0.0.96")]),e._v(", we introduced "),r("code",[e._v("this.Runtime.WAIT")]),e._v(" signal to be the workaroud for some time consuming asynchronous operations, such as database query etc. But you should know this signal is pretty dangrous. What if you "),r("code",[e._v("forget")]),e._v(" to set false to it or the operation takes too much time and dead before callback? So, ServerHub has to count down as a backup operation if it cost too much time. The default value is 10 seconds. If you want it to be shorter or longer, just pass the value to the configuration parameter.(Unit: "),r("strong",[e._v("milliseconds")]),e._v(")")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"tlsoption-v1-0-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tlsoption-v1-0-6","aria-hidden":"true"}},[this._v("#")]),this._v(" TLSOption "),t("code",[this._v("v1.0.6+")])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("Since "),r("code",[e._v("v1.0.6")]),e._v(", ServerHub enhanced security with TLS/SSL. You may secure the connection with a "),r("code",[e._v("TLSOption")]),e._v(" property. This property has four sub-properties: "),r("code",[e._v("Key: string, Cert: string, CA: string")]),e._v("x and "),r("code",[e._v("Port: Array<string>|Array<number>|number|string")]),e._v(". You need to load your private key and certificate files and assign their values to the properties above. And most importantly, you need to specify the port you want to secure.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"socketoptions-v1-6-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socketoptions-v1-6-0","aria-hidden":"true"}},[this._v("#")]),this._v(" SocketOptions "),t("code",[this._v("v1.6.0")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Since "),t("code",[this._v("v1.6.0")]),this._v(", ServerHub introduced WebSocket support to the main repository. This enhanced the ability of ServerHub-mvc supporting real-time applications such as online chat room. Generally, you may use WebSocket listeners on multiple ports, even TLS ones.")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),r("span",{attrs:{class:"token class-name"}},[e._v("WebSocket")]),r("span",{attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{attrs:{class:"token string"}},[e._v("'ws://hostname:port/'")]),r("span",{attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),r("span",{attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),r("span",{attrs:{class:"token class-name"}},[e._v("WebSocket")]),r("span",{attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{attrs:{class:"token string"}},[e._v("'wss://hostname:port/'")]),r("span",{attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),r("span",{attrs:{class:"token comment"}},[e._v("// TLS")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("code",[this._v("Port")]),this._v(" this can be a single number or an array of numbers. It must be the subset of the "),t("code",[this._v("Port")]),this._v(" property of the major configuration object.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("TLS support note. As ServerHub supported TLS since "),t("code",[this._v("v1.0.6")]),this._v(", developers may benefit from a self-signed certificate while debuging locally. But this is not gonna work in WebSocket. Your browser may refuse to connect if your authority is not valid.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"return-value-v1-6-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#return-value-v1-6-0","aria-hidden":"true"}},[this._v("#")]),this._v(" Return Value "),t("code",[this._v("v1.6.0")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("code",[this._v("Servers")]),this._v(" Array (Server - HTTP/HTTPS server)")]),t("li",[t("code",[this._v("Sockets")]),this._v(" Array (Server - WebSocket server)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Servers")]),this._v(" are the all the servers that started and listening on the ports you specified. "),t("code",[this._v("Sockets")]),this._v(" are the WebSocket servers that you attached the exact ports.")])}],!1,null,null,null);t.default=a.exports}}]);