(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{159:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),n("p",[t._v("Controllers 被用来处理访问服务器程序的大多数通过路由选择的请求。当某个特定的路由规则被匹配了，则 ServerHub 会调用该 controller 中的对应 action 方法来处理这个请求，并将处理结果返回给请求者（往往是浏览器）。")]),t._m(1),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),n("p",[t._v("也许你会感到奇怪，为什么 ServerHub 的 controller 是这样的语法：将 return 语句写在了函数体的外面（或者根本没有函数体）。尤其是当你使用 lint 工具时它们还会报错。不要担心，暂时不要纠结，这个问题我们在后面就会讲到。")]),t._m(7),t._m(8),n("p",[t._v("下面两个参数不是必须的，但是也非常有用：")]),t._m(9),t._m(10),n("p",[t._v("这里说明一下，compile-time 不能理解为字面的编译过程，而应该理解为 ServerHub 对你的配置进行加载、处理和执行的过程，对应 runtime 则是当 HTTP 请求接入 ServerHub 时产生的一系列动作对应的时机。如果你在 compile-time 之后对任何 controller 文件进行了修改，到浏览器刷新看看是否你的修改被应用上了。可以发现，完全没有任何变化。ServerHub 仅仅会在 compile-time 加载和注册 controller，而当注册完毕，所有内容都会被缓存下来，当程序执行的时候，你的修改也就被忽略了。")]),n("p",[t._v("不像是 view 和 model 等等资源，ServerHub 对它们采用的策略是动态加载，ServerHub 会跟踪文档的修改操作，一旦进行了修改，就会更新内部缓存（关于缓存，请参阅相关章节），从而保证内容最新而且访问速度足够快。")]),n("p",[t._v("所以永远不要尝试在程序启动之后修改这些程序文件。")]),t._m(11),n("p",[t._v("有这么一些变量，你只能在 controller 的 action 方法执行时才能访问到这些变量。要使用它们，你需要显式使用 this 指针指向当前的 controller 实例。否则，程序将会报错。")]),t._m(12),t._m(13),t._m(14),t._m(15),t._m(16),t._m(17),n("p",[t._v("Action 方法是当 HTTP 请求进入时由路由和 controller 共同触发的一些函数。它处理请求和响应，控制返回的内容。这一部分，我们会讨论 controller 中的 action 方法。这一部分内容对于理解 controller 有很大的帮助。")]),t._m(18),t._m(19),n("p",[t._v("这就是一个非常简单的叫做 index 的 action 方法。你只需要将它定义为 controller 返回的对象的某一个方法即可。而要注意的就是在其中使用 controller 作用域变量时，一定要记住加上“this”引用。")]),t._m(20),t._m(21),n("p",[t._v("这段代码会返回“Hello, XWZ”这段字符（通常显示在浏览器界面里），而后面的返回语句是不会生效的。")]),t._m(22),t._m(23),n("p",[t._v("Action 方法名必须是小写的字符组成。你可以使用字母“a”到“z”以及数字和下划线。有一些名字是保留词，你不得在 action 方法名中使用这些值：Runtime、System、Console 或是 View。")]),n("p",[t._v("命名的最佳实践是使用简短的单词，推荐你使用动词来命名。每个 action 方法的名字如果超过了 20 个字符，就显得不太妥当。并且希望你注意，今后的版本中，可能会强行限制其长度，那样子将导致为旧版本编写的应用程序无法启动。")]),t._m(24),t._m(25),t._m(26),t._m(27),t._m(28),t._m(29),t._m(30),t._m(31),t._m(32),t._m(33),t._m(34),t._m(35),t._m(36),t._m(37),n("p",[t._v("石超 曾告诉过我，他的 IDE 在他用“非完全 JavaScript 风格”写控制器时报错了。随着 ServerHub 的开发和完善，原来的那种创作控制器的方法显得难以拓展。所以我使用控制器作用域变量来对一些对象、函数进行引用，从而提供完整的功能支持。说实在的，一开始当所有东西都限制在控制器作用域当中的时候，这种方法其实很有效，也很优美。但是当逐渐拓展到更广的 context 中时，就显得复杂和难以拓展了。我不得不重新思考石超的提醒，于是在经过几次修改之后加入了模块化写法的控制器创作方式。")]),t._m(38),n("p",[t._v("但是这还不是全部！这还不是全部！这还不是全部！千万不要忘记把文件名的后缀从“.js”改成“.shc.js”：")]),t._m(39),n("p",[t._v("这是 必须进行的，否则 ServerHub 会直接将它作为旧风格加载，并抛出错误。")]),n("p",[t._v("另外，有一点也是你需要注意的：如果你的控制器目录中包含一个以“.shc.js”结尾的文件，则 ServerHub 不会再加载任何旧语法的控制器。所以一定要保证工作空间干干净净。或者呢，就在指定控制器目录的同时（缺省值“controller/”），再显式指明要注册的文件吧，这样一来 ServerHub 就会帮你搞定了。")]),t._m(40),n("p",[n("a",{attrs:{href:"https://github.com/ShiChao1996",target:"_blank",rel:"noopener noreferrer"}},[t._v("石超"),n("OutboundLink")],1),t._v(" 他提醒了我 controller 文件中的语法问题，非常感谢！")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"控制器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控制器","aria-hidden":"true"}},[this._v("#")]),this._v(" 控制器")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"创建-controllers-文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建-controllers-文件","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建 controllers 文件")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("每个 controller 和 JavaScript 文件形成一一对应的关系。请看这个 "),s("code",[this._v("home.js")]),this._v(" 自定义 controller 的例子（过时的写法，不再推荐；请阅读最后的控制器语法说明）：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token string"}},[t._v('"use strict"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  index"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("View")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  primary"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" context "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("View")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    context"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Ziyuan"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" context"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("下面是 "),s("strong",[this._v("推荐")]),this._v(" 的写法 "),s("code",[this._v("v1.0.3+")]),this._v(":")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("module"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  index"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("View")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  primary"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" context "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("View")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    context"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Ziyuan"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" context"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Controller 文件就是平常却又特殊的 JavaScript 文件。你必须在文件内直接返回一个带有 "),s("code",[this._v("action functions")]),this._v(" 方法定义的对象。只有这样，当 ServerHub 要派发路由后的请求时，你的自定义 controller 才会被调用到。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 controller 方法定义中，有三个参数是 "),s("code",[this._v("必须")]),this._v(" 的，它们是：request、response 和 method")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("request 是对 Node.js IncomingMessage 对象的引用，也就是 HTTPRequest。")]),s("li",[this._v("response 则是对 ServerResponse（非完整）对象的引用，即 HTTPResponse。")]),s("li",[this._v("method 则是一个表示当前 HTTPMethod 的参数，其值通常是：GET、POST、PATCH、UPDATE、DELETE 和 PUT。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("id 是由匹配到的路由中提取出的 id 值。")]),s("li",[this._v("search 是从 URL 解析出的查询内容，是一个 JavaScript Map 对象。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"活跃于-compile-time-和静态的-controller"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#活跃于-compile-time-和静态的-controller","aria-hidden":"true"}},[this._v("#")]),this._v(" 活跃于 compile-time 和静态的 Controller")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"controller-作用域变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#controller-作用域变量","aria-hidden":"true"}},[this._v("#")]),this._v(" Controller 作用域变量")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("建议你在适当的时候多使用 ECMAScript 2015 引入的 "),s("strong",[this._v("arrow functions（箭头函数）")]),this._v("。或者是使用一些变通的方法，比如闭包或者是其他手段，这样你的 this 指针就不会乱掉了。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果你在 "),s("code",[this._v("v1.0.2")]),this._v(" 之前就已经用过 ServerHub，那么你很有可能会误认为新的模块加载函数是控制器作用域变量。其实不然，详细信息会在 "),s("a",{attrs:{href:""}},[this._v("模块")]),this._v(" 相关章节提供描述。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"当前所有可以使用的-controller-作用域变量："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当前所有可以使用的-controller-作用域变量：","aria-hidden":"true"}},[this._v("#")]),this._v(" 当前所有可以使用的 controller 作用域变量：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在以后的章节中会详细介绍这些变量的使用方法（ 控制器作用域变量），不过一些返回基本值（比如 "),s("code",[this._v("string")]),this._v("、 "),s("code",[this._v("number")]),this._v(" 等等的就不会被包括在内了（还有一些为 Node.js 原生对象的别名也不会赘述）。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("View()")]),n("strong",[n("em",[t._v("Function")])]),t._v(" 返回由 model/ 目录下文件定义的 model 对象。")]),n("li",[n("code",[t._v("Runtime")]),n("strong",[n("em",[t._v("Object")])]),t._v(" 提供许多运行时对象和属性\n"),n("ol",[n("li",[n("code",[t._v("Runtime.DBProvider")]),n("strong",[n("em",[t._v("Object")])]),t._v(" 对 database provider 对象的引用（默认使用 MySQL，但可以在配置文件中修改）。")]),n("li",[n("code",[t._v("Runtime.FileHelper")]),n("strong",[n("em",[t._v("Object")])]),t._v(" 对 FileHelper 对象的引用，它提供了一些访问文件系统的便捷方法，区别于 Node.js 的 fs 和 path 模块。")]),n("li",[n("code",[t._v("Runtime.WAIT")]),n("strong",[n("em",[t._v("boolean")])]),t._v(" 控制 ServerHub 等待异步操作完成。")])])]),n("li",[n("code",[t._v("System")]),n("strong",[n("em",[t._v("Object")])]),t._v(" 提供对 ServerHub 内部一些常量的访问性\n"),n("ol",[n("li",[n("code",[t._v("System.Version")]),n("strong",[n("em",[t._v("string")])]),t._v(" ServerHub 版本号")]),n("li",[n("code",[t._v("System.NodeVersion")]),n("strong",[n("em",[t._v("string")])]),t._v(" Node.js 版本号")]),n("li",[n("code",[t._v("System.Platform")]),n("strong",[n("em",[t._v("string")])]),t._v(" 操作系统的平台信息（如 win32, linux 等等）")]),n("li",[n("code",[t._v("System.Hardware")]),n("strong",[n("em",[t._v("Object")])]),t._v(" 操作系统的硬件相关信息\n"),n("ul",[n("li",[n("code",[t._v("System.Hardware.TotalMemory")]),n("strong",[n("em",[t._v("number")])]),t._v(" 已安装内存（单位 byte）")]),n("li",[n("code",[t._v("System.Hardware.FreeMemory")]),n("strong",[n("em",[t._v("number")])]),t._v(" 空闲内存（单位 byte）")]),n("li",[n("code",[t._v("System.Hardware.NetworkInterfaces")]),n("strong",[n("em",[t._v("Object")])]),t._v(" 返回本机所有已经注册了 IP 地址的网络接口信息")])])]),n("li",[n("code",[t._v("System.Die(exit_code)")]),n("strong",[n("em",[t._v("Function")])]),t._v(" 强行终结 ServerHub 实例")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"关于-controller-中的-action-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于-controller-中的-action-方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 关于 controller 中的 action 方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"怎么写一个-action-方法？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么写一个-action-方法？","aria-hidden":"true"}},[this._v("#")]),this._v(" 怎么写一个 action 方法？")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("index"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("View")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Action 方法的三个参数都是必须的，如果你想要手动控制返回的 HTTP 响应内容，可以用 "),s("code",[this._v("res.write()")]),this._v(" 一类的方法来进行，ServerHub 就会忽略掉 model 中的内容以及相关的渲染引擎，然后根据你的要求来操作。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("index"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    response"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("write")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'Hello, XWZ'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("View")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("注意 "),n("code",[t._v("request")]),t._v(" 参数是原生的 Node.js "),n("code",[t._v("IncomingMessage")]),t._v(" 对象（在 ServerHub 0.0.7 版本中仍然是）。但 "),n("code",[t._v("response")]),t._v(" 参数则是一个假的 "),n("code",[t._v("ServerResponse")]),t._v(" 对象。ServerHub 在其中打包了不少来自原生对象的方法和属性，这样你在使用时就不会感到太困惑。不过具体的调用方法还请阅读相关章节。 "),n("code",[t._v("Method")]),t._v(" 是表示 HTTP 请求类型的字符串。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"action-方法命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#action-方法命名规范","aria-hidden":"true"}},[this._v("#")]),this._v(" Action 方法命名规范")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"关于-controller-特殊的语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于-controller-特殊的语法","aria-hidden":"true"}},[this._v("#")]),this._v(" 关于 controller 特殊的语法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("警告")]),s("p",[this._v("自 "),s("code",[this._v("v1.0.3")]),this._v(" 之后就不再推荐此写法了，并且在将来的某个版本中，将会全面禁止使用此语法。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("s",[this._v("前面我们说过，如果你用了 lint 工具，那么 ServerHub 的 controller 文件将会引起一些语法错误。可能它会提示“ 在函数外使用了 return 语句”。不过其实你所写的是正确的、合法的 部分 JavaScript 文件。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("s",[this._v("Controllers 脚本其实都是 函数，它们并不是完全独立的 JavaScript 函数。当你尝试直接运行 controller 文件时，是不会有效果的。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("s",[this._v("下面举例说明：（ home.js）：")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token string"}},[t._v('"use strict"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  index"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("View")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("s",[this._v("如果你把这个 home.js 当作平常的 JavaScript 文件，那么就还需在 return 语句之外加上一个函数的花括号，像这样：")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token string"}},[t._v('"use strict"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        index"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("View")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("s",[this._v("好了，现在它成了标准的 JavaScript 文件了。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("s",[this._v("但是，不知道你还记不记得 controllers 全部都是 函数 ？这意味着什么？你的 controller 整个就是一个函数，它的隐形边界（文件）就是函数的花括号。所以，如果我们强行加上了花括号，原来的 controller 文件就成了这个样子：")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token string"}},[t._v('"use strict"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            index"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("View")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("s",[this._v("可见，这里产生了一个多余的函数包围，留它何用？直接去掉就好了。这也就是我们称 ServerHub 的 controller 是“部分 JavaScript 文件”的原因了。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("不过请不要担心，ServerHub 将会持续支持旧的方式，直到 "),s("code",[this._v("v2.0.0")]),this._v(" 版本（最早）。你将有充分的时间来迁移到新的模块加载语法。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"控制器的模块化写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控制器的模块化写法","aria-hidden":"true"}},[this._v("#")]),this._v(" 控制器的模块化写法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("新的写法其实非常简单。你只需要把 "),s("code",[this._v("return")]),this._v(" 换成 "),s("code",[this._v("module.exports =")]),this._v(" 即可。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("home.js => home.shc.js")]),s("code",[this._v("language.js => language.shc.js")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"本章节特别感谢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本章节特别感谢","aria-hidden":"true"}},[this._v("#")]),this._v(" 本章节特别感谢")])}],!1,null,null,null);s.default=e.exports}}]);