(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{157:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"插件系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件系统","aria-hidden":"true"}},[t._v("#")]),t._v(" 插件系统")]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),a("p",[t._v("自 v1.0.0-beta 起可用")])]),a("p",[t._v("由于 ServerHub 自身是一个 Web 服务器的基础，而如果你一切从头开始，那么就需要应付一大堆非常基本的问题。又因为 ServerHub 会自动将请求派发到相对应的处理机制（比如控制器或缓存命中器），所以你难以对每一个请求的处理函数进行单独操作。这样不仅开发难度高，维护和重构的成本也随程序体量而增加。试想，能否在路由开始之前就进行一些操作呢？比如说权限验证或是请求过滤。抑或在路由完成之后做一些事，比如触发一个统计函数来分析对资源的使用情况……")]),a("p",[t._v("这里，我们将“插件”概念介绍给你。本文所述甚是简单，但是不要错过了打造你的专属插件的好机会！")]),a("h2",{attrs:{id:"plugin-钩子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugin-钩子","aria-hidden":"true"}},[t._v("#")]),t._v(" Plugin 钩子")]),a("p",[t._v("首先来看一幅顺序图：（你可以右键单独浏览图片，这样清晰度会更高）")]),a("p",[a("img",{attrs:{src:"/assets/serverhub-module-plugin-sequence.png",alt:"plugin"}})]),a("p",[t._v("我们称其为钩子，但是它看起来更像是一个必须的过程。不过，由于之前版本并未引入这一概念，插件更像是从原来的流程当中强行中断的一部分，所以也就以钩子来称呼了。当某个 HTTP 请求到达 ServerHub 的时候，它会被 ServerHub 的 core 模块处理。此时第一阶段插件被激活，待它们处理完毕，core 又会把请求交给 route 模块。Route 完毕得到的结果会被用来激活第二阶段的插件，等到它们也处理完了，这些请求会被 core 根据 route 结果派发给对应的处理程式。")]),a("p",[t._v("两个阶段的插件分别是 "),a("strong",[t._v("路由前置插件")]),t._v(" 和 "),a("strong",[t._v("路由后置插件")]),t._v("。")]),a("p",[t._v("前置插件通常并不关心这个请求会被路由到哪里。它们往往做一些比较全局性的工作，比如全局权限验证。而后置插件往往更关注于请求目标的类型，并针对类型的不同采取不同的措施。")]),a("h2",{attrs:{id:"怎样创建一个插件？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怎样创建一个插件？","aria-hidden":"true"}},[t._v("#")]),t._v(" 怎样创建一个插件？")]),a("p",[t._v("插件其实就是完全的 Node.js 模块。它遵循模块的所有准则。但是有些额外的限制：")]),a("ul",[a("li",[a("p",[t._v("合法的插件必须包括一些属性：")]),a("ul",[a("li",[a("code",[t._v("app_name")]),t._v(" 为你的插件取一个独一无二的名字。所有的字母必须小写，并且数字、字母、单独的连词符才是合法的选择。比如 serverhub-plugin-my-filter （注意前缀应该是 "),a("strong",[t._v("serverhub-plugin-")]),t._v("）。")]),a("li",[a("code",[t._v("version")]),t._v(" 插件的版本号。建议按照 NPM 的规范来处理。")]),a("li",[a("code",[t._v("version_support")]),t._v(" 标记当前插件版本支持的最低 ServerHub 版本号，低于此版本则无法注册成功。")]),a("li",[a("code",[t._v("phase")]),t._v(" 指明这是一个前置插件还是后置插件。")]),a("li",[a("code",[t._v("main")]),t._v(" 插件的入口调用函数。对于前置插件，此函数有两个必须参数；后置插件则为三个（第三个是路由的结果）。")])])]),a("li",[a("p",[t._v("下面举一个例子")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  app_name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"serverhub-plugin-my-plugin"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  version"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"0.1.0"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  version_support"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"1.0.0-alpha"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  phase"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"before-route"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  main"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"Hello, this is my first ServerHub plugin!"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"重要提示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重要提示","aria-hidden":"true"}},[t._v("#")]),t._v(" 重要提示")]),a("p",[t._v("创建插件时，下面的内容一定要牢记于心")]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),a("p",[a("strong",[t._v("永远不要在插件中试图修改传入 "),a("code",[t._v("main")]),t._v(" 函数的参数中的 ServerResponse 对象！")])])])])}],!1,null,null,null);s.default=e.exports}}]);